/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export declare namespace DataTypes {
  export type CreateFollowDataStruct = {
    followerId: PromiseOrValue<BigNumberish>;
    followeeId: PromiseOrValue<BigNumberish>;
  };

  export type CreateFollowDataStructOutput = [BigNumber, BigNumber] & {
    followerId: BigNumber;
    followeeId: BigNumber;
  };

  export type FollowStruct = {
    owner: PromiseOrValue<string>;
    followerId: PromiseOrValue<BigNumberish>;
    followeeId: PromiseOrValue<BigNumberish>;
  };

  export type FollowStructOutput = [string, BigNumber, BigNumber] & {
    owner: string;
    followerId: BigNumber;
    followeeId: BigNumber;
  };
}

export interface IFollowNFTInterface extends utils.Interface {
  functions: {
    "follow((uint256,uint256))": FunctionFragment;
    "followersCount(uint256)": FunctionFragment;
    "followingCount(uint256)": FunctionFragment;
    "getFollows(uint256[])": FunctionFragment;
    "setProfileContract(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "follow"
      | "followersCount"
      | "followingCount"
      | "getFollows"
      | "setProfileContract"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "follow",
    values: [DataTypes.CreateFollowDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "followersCount",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "followingCount",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFollows",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileContract",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: "follow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "followersCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "followingCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFollows", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setProfileContract",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IFollowNFT extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IFollowNFTInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    follow(
      createFollowData: DataTypes.CreateFollowDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    followersCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    followingCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFollows(
      tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[DataTypes.FollowStructOutput[]]>;

    setProfileContract(
      profileContractAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  follow(
    createFollowData: DataTypes.CreateFollowDataStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  followersCount(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  followingCount(
    profileId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFollows(
    tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<DataTypes.FollowStructOutput[]>;

  setProfileContract(
    profileContractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    follow(
      createFollowData: DataTypes.CreateFollowDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    followersCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    followingCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFollows(
      tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<DataTypes.FollowStructOutput[]>;

    setProfileContract(
      profileContractAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    follow(
      createFollowData: DataTypes.CreateFollowDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    followersCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    followingCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFollows(
      tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setProfileContract(
      profileContractAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    follow(
      createFollowData: DataTypes.CreateFollowDataStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    followersCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    followingCount(
      profileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFollows(
      tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setProfileContract(
      profileContractAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IContentBaseCommentV1,
  IContentBaseCommentV1Interface,
} from "../../../contracts/publish/IContentBaseCommentV1";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "parentId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creatorId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.CreateCommentData",
        name: "createCommentData",
        type: "tuple",
      },
    ],
    name: "commentOnComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "parentId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creatorId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.CreateCommentData",
        name: "createCommentData",
        type: "tuple",
      },
    ],
    name: "commentOnPublish",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creatorId",
        type: "uint256",
      },
    ],
    name: "deleteComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "disLikeComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCommentById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "creatorId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentId",
            type: "uint256",
          },
          {
            internalType: "enum DataTypes.CommentType",
            name: "commentType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Comment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProfileContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPublishContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "likeComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creatorId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.UpdateCommentData",
        name: "updateCommentData",
        type: "tuple",
      },
    ],
    name: "updateComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "updateProfileContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "updatePublishContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IContentBaseCommentV1__factory {
  static readonly abi = _abi;
  static createInterface(): IContentBaseCommentV1Interface {
    return new utils.Interface(_abi) as IContentBaseCommentV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IContentBaseCommentV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IContentBaseCommentV1;
  }
}
